---
title: "New Univariate Analysis"
format: html
editor: visual
---

# Libraries loading and sources

```{r loading-libreries, echo=FALSE}
library(data.table)
library(janitor)
library(here)
library(dplyr)
library(stringr)
library(echarts4r)
library(reactable)
library(htmltools)
library(ComplexHeatmap)
library(clusterProfiler)
library(org.Hs.eg.db)
library(gt)
library(visNetwork)
library(ggplot2)
library(vsn)
library(corrmorant)
library(ComplexHeatmap)

source(file = "C:/Users/MSU/Documents/GC/Analysis/myfun_test.R")
source(file = "C:/Users/MSU/Documents/GC/Analysis/theme_ggplot_test.R")
```

# Loading raw data

```{r loading-data}
raw_data <- loading_data(file_path = here::here("proteinGroups.txt"))
```

# Make Experimental Design

```{r make-expdesig}
exp_des <- exp_design (data=raw_data, pattern_interest = "lfq_intensity_bc_")
```

# Data pre-processing

```{r Data preprocessing}
data_pre <- pre_process (data=raw_data, pattern_interest =  "lfq_intensity_bc_")
```

# Data wrangling merged table (exp_des+pre_process)

```{r Wrangling/Data filtered}
data_wrang <- data_wrangling(data=data_pre,
                             pep_filter = "peptides",
                             pep_thr = 2)
```

# Filter application

```{r Data Filtered}
data_filt <- data_filtered(data = data_wrang,
                           valid_val_filter = "alog",
                           valid_val_thr = 0.75)
```

# Data imputation

```{r Data imputed}
data_imput <- data_imputed (data= data_filt,
                         shift = 1.8, 
                         scale = 0.3, 
                         unique_visual = FALSE)

```

```{r Palette}
n_of_color <- max(exp_des %>% dplyr::count(replicate) %>% dplyr::pull(n))
color_palette <- viridis::viridis(n = n_of_color , direction = -1, end = 0.70, begin = 0.30)

```

```{r Protein count by condition}
barplot_count(data = data_filt)
```

```{r Protein Coverage}
barplot_cover(data = data_filt)+
  theme(legend.position = "none")
```

```{r Normalized data distribution}
boxplot(data=data_filt)
```

```{r Missing data distribution}
densityplot(data=data_filt)
```

```{rPlot Missing data}
barplot_missval(data=data_filt)
```

```{r Missing value distribution}
den_missval(data=data_filt)
```

```{r Plot imputation}
den_imput(data=data_filt)    
```

```{r Heatmap}
htmap(data = data_filt)
```
